---
interface Props {
  title: string
  links: string[]
}

const {
  title,
  links
} = Astro.props
---

<div class="relative inline-block">
  <button class="dropdown-btn bg-pink-200 text-pink-600 sm:p-4 p-2 border-none rounded-xl cursor-pointer hover:bg-pink-300">{title}</button>
  <div class="mt-1 hidden absolute z-[1] bg-pink-200 px-2 rounded-md menu">
    {
      links?.map((link, i) => (
        <a class="py-3 px-4 block text-pink-600 hover:bg-pink-300 rounded-md" href={link}>
          Part {i + 1}
        </a>
      ))
    }
  </div>
</div>

<script>
  const $buttons = document.querySelectorAll<HTMLButtonElement>('.dropdown-btn')
  const $menus = document.querySelectorAll<HTMLDivElement>('.menu')

  function toggleMenu (menu: HTMLElement) {
    if (menu.classList.contains('hidden')) menu.classList.replace('hidden', 'block')
    else menu.classList.replace('block', 'hidden')
  }

  $buttons.forEach((button, i) => {
    button.addEventListener('click', (e) => {
      toggleMenu($menus[i])
    })
  })
</script>